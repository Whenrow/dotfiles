self.current_quality_check_id
self.current_quality_check_id.title
self.title
self.workorder_id
self
self.workorder_id.current_quality_check_id
wo.qty_producing
wo.current_quality_check_id
wo.current_quality_check_id.qty_done
self
wo.current_quality_check_id
workorders
wo.quality_point_ids
wo.operation_id
wo.operation_id.name
wo.operation_id.quality_point_ids
wo.qty_producucing
wo.qty_producing
wo.qty_production
wo.current_quality_check_id.qty_done
wo.check_ids[0].qty_done
wo.current_quality_check_id
wo.check_ids
wo.current_quality_check_id.qty_done
wo.move_id
wo.move_id.quantity_done
self.qty_done
new_check.move_line_id
self.qty_done
wo.current_quality_check_id.component_remaining_qty
wo.qty_producing
self.qty_done
wo.current_quality_check_id.qty_done
self.qty_done
self.check_ids
self.check_ids.mapped('quality_state')
self.chech_ids.filter(lambda c: c.quality_state == 'fail')
self.check_ids.filter(lambda c: c.quality_state == 'fail')
self.check_ids.filtered(lambda c: c.quality_state == 'fail')
self.check_ids.filtered(lambda c: c.quality_state == 'fail').test_type
self.check.ids.mapped('quality_state')
self.check_ids.mapped('quality_state')
self.check_ids.filtered(lambda c: c.quality_state == 'none').test_type
self.test_type
self._is_pass_fail_applicable()
request
request.session
record
records
tree
model.pool.field_inverses[key]
tree
self.pool.field_triggers
fnames
self._field
self._fields
self
new_records
model
key
tree
self.user_data_dir
self.submarine_pod
self.product_id.mapped('name')
self.product_id.name
name
self.name
guess_mimetype(out)
guess_mimetype(self.picture)
guess_mimetype(self.picture.decode())
guess_mimetype(self.picture.encore())
guess_mimetype(self.picture.encode())
self.picture
guess_mimetype(base64.base64decode(self.picture))
guess_mimetype(base64.b64decode(self.picture))
self.env.context
date_stop - date_start
(date_stop - date_start).total_seconds()
(date_stop - date_start).total_seconds()/60.0
self.operation_id
self
self.production_id
lines
product_lines
employee_cost
empl_cost_by_product
product_lines
registry.populated_models
model._name
model._populate
model._populate(size)
Q
self.env.context
domain
self.env.context
view
views
result
wo.production_id
wo.production_id.product_id
self.bom_3.product_id,tracking
self.bom_3.product_id.tracking
self.bom_3.bom_line_ids.product_id.mapped('tracking')
check_to_consider
checks_to_consider
checks_to_consider.mapped('finished_product_sequence')
other_wos.state
wo.is_last_unfinished_wo
self.time_ids
self.time_ids.mapped('date_start')
self.time_ids
self.time_ids.mapped(date_end)
self.time_ids.mapped('date_end')
activities
activities.title
activities.note
action['views']
point.worksheet_document
point.worksheet_document.decode()
self.worksheet_document
self.env['ir.attachment'].search([
self.env['ir.attachment'].search([('res_model', '=', 'quality.point'), ('res_id','=',self.id), ('field_name', '=', 'worksheet_document')])
self.env['ir.attachment'].search([('res_model', '=', 'quality.point'), ('res_id','=',self.id), ('field', '=', 'worksheet_document')])
self.env['ir.attachment'].search([('res_model', '=', 'quality.point'), ('res_id','=',self.id), ('res_field', '=', 'worksheet_document')])
self.env['ir.attachment'].search([('res_model', '=', 'quality.point'), ('res_id','=',self.id), ('res_field', '=', 'worksheet_document')]).value
self.env['ir.attachment'].search([('res_model', '=', 'quality.point'), ('res_id','=',self.id), ('res_field', '=', 'worksheet_document')]).datas
self.env['ir.attachment'].search([('res_model', '=', 'quality.point'), ('res_id','=',self.id), ('res_field', '=', 'worksheet_document')]).raw
self.env['ir.attachment'].search([('res_model', '=', 'quality.point'), ('res_id','=',self.id), ('res_field', '=', 'worksheet_document')]).mimetype
attachment.db_datas
attachment.raw
attachment.datas
attachment.store_fname
action[0]
action
self.workorder_id
self.workorder_id.production_id
self.workorder_id.production_id.picking_type_id
self
self.move_ids
self.move_ids.mapped('state')
self.move_ids
self.move_ids[-1].state
def_name
request.session
request.session.get('employee_id')
action.get('context')
literal_eval(action['context'])
action['context']
node.value
node.__str__
node.__str__()
action['context']
literal_eval("{}")
literal_eval("{'search_default_workcenter': 1}")
literal_eval("{'search_default_workcenter': active_id}")
production.bom_id
production.bom_id.operation_ids
production.bom_id.operation_ids[0]
production.bom_id.operation_ids[0].worksheet
production.bom_id.operation_ids[0].point+ids
production.bom_id.operation_ids[0].point_ids
production.bom_id.operation_ids[0].quality_point_ids
production.bom_id.operation_ids[0].quality_point_ids[0]
production.bom_id.operation_ids[0].quality_point_ids[0].worksheet
production.bom_id.operation_ids[0].quality_point_ids[0].worksheet_document
picking_always.state
picking_always.backorder
picking_always.backorder_ids
picking_always.state
self.workorder_id.current_quality_check_id
bom.active
query
query.text
query.get_sql
query.get_sql()
self.env.context
self.context
self.env.context
env.context
record.enc.context
record.env.context
self
self.env.context
lines
lines.move_id.move_line_ids
move.sale_line_id
move.sale_line_id.order_id
move.sale_line_id
move.sale_line_id.order_id
move.picking_id.location_dest_id.usage == "customer"
move.sale_line_id
self.env["sale.order.line"].search([("id", "=", move.sale_line_id.id)])
self.env["sale.order.line"].search([("id", "=", 50)])
self.env["sale.order.line"].sudo().search([("id", "=", 50)])
default['move_finished_ids']
self.move_finished_ids
values.keys()
values['move_finished_ids']
product.product_template_attribute_value_ids
product
product.name
self.bom_product_template_attribute_value_ids
self.bom_product_template_attribute_value_ids.name
product.product_template_attribute_value_ids & self.bom_product_template_attribute_value_ids
len(self)
self.limit
comodel
domain
len(lines)
inverse_field
inverse_field.type
val
result
orderby_terms
query
bom.product_id
out_domain
len(out)
len(outs)
max(outs.mapped('date'))
tail_pos
q
stick
tail_pos[i]
i
vals_list
len(vals_list
len(vals_list)
len(value)
self.move_finished_ids
len(list_move_finished
len(list_move_finished)
len(vals_list)
vals_list.id
id(vals_list)
production.state
tocompute
self
self.move_finished_ids
self.env['stock.move'].search([], limit=1, order="id desc")
self.env['stock.move'].search([], limit=1, order="id desc").production_id
self.env['stock.move'].search([], limit=1, order="id desc").location_id
self.env['stock.move'].search([], limit=1, order="id desc").location_dest_id
self.env['stock.move'].search([], limit=1, order="id desc").location_dest_id.is_scrapped
self.env['stock.move'].search([], limit=1, order="id desc").location_dest_id.is_scrapp
self.env['stock.move'].search([], limit=1, order="id desc").location_dest_id.scrapped
self.env['stock.move'].search([], limit=1, order="id desc").location_dest_id.scrapp
self.env['stock.move'].search([], limit=1, order="id desc").location_dest_id.scrap_location
self.quantity_svl
self.value_svl
ResCurrencyRate.search([])
ResCurrencyRate.search([('currency_id': company.currency_id.id)])
ResCurrencyRate.search([('currency_id'i, '=', company.currency_id.id)])
ResCurrencyRate.search([('currency_id', '=', company.currency_id.id)])
ResCurrencyRate.search([('currency_id', '=', company_currency_id.id)])
ResCurrencyRate.search([('currency_id', '=', company_currency.id)])
ResCurrencyRate.search([('currency_id', '=', company_currency.id)]).mapped('name')
mo.picking_ids[1].move_ids
mo.picking_ids[1].move_ids.mapped('product_uom_qty')
mo.picking_ids[0].move_ids.mapped('product_uom_qty')
mo.picking_ids.move_ids
mo.picking_ids[1].move_ids
mo.picking_ids[1].move_ids[0].product_uom_aty
mo.picking_ids[1].move_ids[0].product_uom_qty
mo.picking_ids[1].move_ids.mapped('date_deadline')
move_update.date_deadline
delta
new_deadline
self.move_raw_ids
move.move_orig_ids
move.move_dest_ids
move.move_dest_ids.mapped('name')
move.move_dest_ids.mapped('state')
move.move_dest_ids.raw_material_production_id.mapped('state')
self.move_raw_ids
production.move_raw_ids
self.move_dest_ids
production.move_raw_ids
production.move_raw_ids.move_orig_ids
self.move_raw_ids.move_orig_ids
self.move_raw_ids.move_orig_ids.mapped('state')
product
product.display_name
bom.product_tmpl_id
bom.product_tmpl_id.display_name
self.product1.categ_id.property_stock_account_input_categ_id
self.stock_input_account
self.product1.categ_id.property_stock_account_input_categ_id
self.env.company.property_stock_account_input_categ_id
self.env.company.property_stock_valuation_account_id
company.name
self.env.company.name
self.env.company.country_id.name
self.product1.company_id
self.product_1.categ_id
self.product1.categ_id
self.product1.categ_id.property_stock_account_
self.product1.categ_id.property_stock_account_input_categ_id
self.env.company
self.env.company.property_stock_account_input_categ_id
input_amls = self.env['account.move.line'].search([('account_id', '=', self.stock_input_account.id)])
self.env['account.move.line'].search([('account_id', '=', self.stock_input_account.id)])
self.env['account.move.line'].search([('account_id', '=', self.stock_input_account.id)]).mapped('name')
self.env['account.move.line'].search([('account_id', '=', self.stock_input_account.id)]).mapped('debit')
self.env['account.move.line'].search([('account_id', '=', self.stock_input_account.id)]).mapped('product_id')
self.stock_account_product_categ.property_account_creditor_price_difference_categ
price_diff_line.price_unit
price_diff_line.tax_ids
invoice.line_ids.tax_ids
invoice.line_ids.
invoice.line_ids
price_diff_line.price_subtotal
employee_ids.mapped('barcode')
employee_ids.sudo().filtered(lambda e: e.barcode == barcode)
employee_ids.sudo().filtered(lambda e: e.barcode == barcode)[:-1]
employee_ids.sudo().filtered(lambda e: e.barcode == barcode)[:1]
[][:1]
so_line.fsm_lot_id
moves._rollup_move_origs()
moves._rollup_move_origs(set())
moves._rollup_move_origs(self.ids)
self.product_qty
NOTHING
line.price_unit
order.order_line.price_unit
seller.min_qty
line.product_uom_qty
line._origin.product_qty
line.product_ty
line.product_qty
line.product_uom_qty
line.price_unit
line._origin.product_qty
total_void
self.product_qty
candidate_moves_list[0]
candidate_moves_list[0].mapped('product_qty')
moves_to_merge
moves_to_
moves_to_unlink
moves.picking_id
move.location_id.name + ' ' + move.location_dest_id.name
move.location_id.name + ' -> ' + move.location_dest_id.name
self.finishedf
self.finished
f_layers
f_layers.stock_move_id
f_layers.stock_move_id.mapped('state')
f_layers.stock_move_id.mapped('quantity_done')
f_layers.mapped('value')
f_layers.mapped('quantity')
f_layers.mapped('price_unit')
f_layers.mapped('unit_cost')
f_layers[0].stock_move_id.location_id.name
f_layers[0].stock_move_id.location_dest_id.name
f_layers
f_layers[0].stock_move_id
f_layers[0].stock_move_id._is_in()
f_layers[0].stock_move_id.move_line_ids
f_layers[0].stock_move_id.move_line_ids.location_id
f_layers[0].stock_move_id.move_line_ids.location_id.name
move
move.origin
move.raw_material_production_id.origin
move.raw_material_production_id
move.raw_material_production_id.move_finished_ids
move.raw_material_production_id.move_finished_ids.origin
replenishments
len(replenishments)
source
sources_to_lines
source[0]
source[0].name
outs
outs.picking_id.mapped('name')
outs
[o.picking_id.name for o in outs]
source
qty_done
self.is_subcontract
move.location_id.name
move.location_dest
move.location_dest_id.name
move.is_subcontract
group  = self.env.user.has_group('mrp.group_mrp_routings')
group
self.group_mrp_routings
self.env.all.towrite
self.env.all.towrite()
self.env.all.towrite.items
self.env.all.towrite.items()
self.procure_method
self.location_id.name
self.location_dest_id.name
rule
rule.name
rule
run
runrule
rule
production.move_finished_ids
mo.move_finished_ids
mo.move_finished_ids.product_id
mo.bom_id
self
self.product_id
move_finished
move_finished_values.get('product_id')
self.move_finished_ids
self.move_finished_ids.product_id
self.product_id
self.product_id.name
move_finished_values
self.product_id
self.move_finished_ids.product_id
self.product_id
self.move_finished_id
self.move_finished_ids
self.move_finished_ids.product_id
self.move_finished_ids
self.env['stock.picking'].read_group([], ["group_id", "id:max"], ["group_id"])
self.env['stock.picking'].read_group([], ["group_id", "name:array_agg"], ["group_id"])
self.state
move._should_bypass_reservation()
picking.immediate_transfer
self.immediate_transfer
self.move_ids
self.move_ids.state
self._context
self.env.context
node.text
node
node.getchildren
node.getchildren()
node.getchildren()[0]
node.getchildren()[0].tag
node.getchildren()[0].get('name')
self.idref
env
child.tag
record.qty_done
record.quant_id
action_from_mark_done
self.env.context
self.qty_done
self.reserved_qty
move.move_line_ids
updates
moves.picking_id.immediate_transfer
self
self.product1.standard_price
self.product1.value_svl
3 * 0.945
11.34 - 2.835
self.product1.value_svl
move.move_line_ids
move.quantity_done
move1.move_line_ids
move1.move_line
move1.move_line_ids
move1.picking_id
move1.picking_id.immediate_transfer
picking_stock_pack.move_ids
picking_stock_pack.move_ids.product_uom_qty
picking_stock_pack.move_ids.reserved_availability
self
delivery_order.move_ids.state
delivery_order.move_ids.mapped('state')
picking.move_ids.mapped('additionnal')
picking.move_ids.mapped('additional')
receipt.move_line_nosuggest_ids
receipt.move_line_ids
move.move_line_ids
self
mls
self.state
ml.move_id.state
self.picking_id
self.picking_id.immediate_transfer
picking.state
picking.move_ids.state
self.state
self.from_immediate_transfer
self.picking_id.immediate_transfer
picking.immediate_transfer
picking
self.picking_id
self.location_dest_id
self.location_dest
move.location_dest
move.location_dest_id
move.state
move.from_immediate_transfer
receipt.show_lots_text
receipt.show_operations
receipt.move_ids
receipt.move_ids.show_details_visible
receipt.move_ids.product_
receipt.move_ids.product_id
receipt.move_ids.product_id.tracking
receipt.move_ids.product_id.show_operation
receipt.move_ids.show_operations
internal_transfer.move_ids
self.state
internal_transfer.move_ids
internal_package.move_ids
internal_transfer.package_level_ids
self.package_level_ids.state
self.move_ods
self.move_ids
self.move_ids.mapped('state')
package_level.move_id
package_level.move_ids
package_level.move_ids.state
self.move_ids
self.move_ids.state
self.move_ids.mapped('state')
internal_package.location_dest_id
internal_transfer.location_dest_id
internal_package.move_line_ids
self.package_level_ids.move_line_ids
self.move_ids
package_level_ids.move_line_ids
self.package_level_id
self.package_level_id.move_line_ids
self
self.move_line_ids
self.
self
self.exists()
self.move_line_ids
self.move_id.picking_id.immediate_transfer
self.move_ids
self.move_id
self.move_id.picking_id.immediate_transfer
self.move_id.state
receipt_package.immediate
receipt.immediate_transfer
internal_transfer
internal_transfer.immediate_transfer
self.move_line_ids
self.move_id.picking_id.immediate_transfer
internal_transfer.immediate_transfer
internal_picking.immediate_transfer
internal_picking.state
move_form.fields
move_form
move_form._record
move_form
receipt_picking.immediate_transfer
internal_picking.immediate_transfer
internal_picking.move_ids
internal_picking.move_ids.move_line_ids[0]
internal_picking.move_ids.move_line_ids[0].is_locked
internal_picking.move_ids.move_line_ids[0].state
internal_picking.move_ids.move_line_ids[0].package_level_id
internal_picking.move_ids.picking_type_entire_packs
done_sml.lot_name
done_sml.location_dest_id
done_sml.location_dest_id.name
self
self.move_line_ids
self.move_line_ids.location_dest_id
self.move_line_ids
self.move_line_ids.location_dest_id
self.move_line_ids
self.move_line_ids.location_dest_id
receipt.move_ids.state
self.state
receipt.move_ids.state
view
tree
proxy._field_info['edition_view']
list(proxy._field_info['edition_view'].keys())
view
model
qties
mo.move_raw_ids.quantity_done
self.quantity_done
mo.move_raw_ids.move_line_ids
mo.move_raw_ids.move_line_ids.qty_done
self.move_raw_ids.move_line_ids.qty_done
self.move_raw_ids.move_line_ids
mo.move_raw_ids.move_line_ids.qty_done
mo.move_raw_ids.move_line_ids
self.move_raw_ids.quantity_done
move.product_qty
move.location_id
move.location_id.name
self.state
move.quantity_done
move.from_immediate_transfer
picking_delivery.move_ids
picking_delivery.move_ids.mapped('quantity_done')
picking_delivery.move_ids.mapped('product_uom_qty')
mo.move_raw_ids
mo.move_raw_ids.product_id.name
mo.move_raw_ids.product_id.mapped('name')
mo.move_raw_ids.product_id.mapped('product_uom_qty')
mo.move_raw_ids.mapped('product_uom_qty')
mo.move_raw_ids.mapped('tracking')
mo.move_raw_ids.mapped('product_tracking')
mo.move_raw_ids.product_id.mapped('tracking')
self.product_id.mapped('name')
self.product_id.mapped('product_uom_id')
self.product_id.mapped('product_uom_qty')
self.mapped('product_uom_qty')
self.picking_id
candidate_moves_set[0]
candidate_moves_set.next()
candidate_moves_set
self.mapped('product_id.name')
move.picking_id
self.product_id.name
self.move_id.product_id.name
self.move_ids.product_id.name
self.quantity_done
production.product_uom_qty
line
line.product_id
line.qty_done
line.lot_name
picking_receipt.move_line_ids
picking_receipt.move_line_ids.mapped('qty_done')
picking_receipt.move_line_ids
picking_receipt.move_ids
picking_receipt.move_ids.quantity_done
delivery2.state
delivery2.move_ids
delivery2.move_ids.product_uom_qty
delivery2.move_ids.forecast_availability
delivery2.state
delivery2.move_id.product_uom_qty
delivery2.move_ids.product_uom_qty
delivery2.move_ids.state
delivery2.move_ids.forecast_availability
delivery2.scheduled_date
delivery2.move_ids.date
delivery1.move_ids.forecast_availability
move.has_tracking
move.picking_type_id.use_create_lots
delivery2.state
delivery2.move_ids.forecast_
delivery2.move_ids.forecast_availability
delivery2.move_ids.product_id.stock_move_ids
delivery2.move_ids.product_id.stock_move_ids.mapped('product_uom_qty')
delivery2.move_ids.product_id.stock_move_ids.mapped('state')
delivery2.move_ids.product_id.stock_move_ids.mapped('date')
delivery2.move_ids.product_id.qty_available
delivery1.scheduled_date
receipt2.scheduled_date
receipt2.state
receipt1.state
receipt1.scheduled_date
delivery1.scheduled_date
delivery2.scheduled_date
delivery1.state
outs.mapped('product_uom_qty')
self
self.reference
reserved_outs
ins
outs
result
delivery1.move_ids.forecast_availability
receipt1.move_ids.forecast_availability
delivery2.move_ids.forecast_availability
delivery1.move_ids.forecast_availability
delivery2.move_ids.date
delivery1.move_ids.date
receipt1.move_ids.date
delivery2.move_ids.date
receipt1.move_ids.date
delivery2.move_ids.quantity_done
delivery1.move_ids.quantity_done
all_lines
receipt1.state
sources_to_lines
lines
receipt.state
move_line_vals
move_lines_vals
move_lines_vals[1:]
move.product_uom_qty
move.quantity_done
picking.move_line_ids
ml1.exists()
wave.picking_ids
wave.picking_ids.move_line_ids
picking_move_lines
picking_move_lines.mapped'(qty_done)
picking_move_lines.mapped'(qty_done')
picking_move_lines.mapped.('qty_done')
picking_move_lines.mapped('qty_done')
self._context
mos
subcontracted_move
subcontracted_move.reference
len(res)
res
productions
vals
move.move_line_ids
stock_output
self.config_id.ship_later
pickings.mapped('state')
current_session.picking_ids[0].move_lines_without_package.quantity_done
current_session.picking_ids[0].move_ids_without_package.quantity_done
current_session.picking_ids[0].move_lines.account_move_ids
account_output.name
account_output
expense_account.name
self.category.property_stock_account_input_categ_id
self.category.property_stock_account_input_categ_id.name
aml_output.mapped('debit')
aml_output.mapped('credit')
aml_output[1].move_id.name
self.picking.state
backorder_id.state
self.env['mrp.production'].search([('product_id', '=', self.finished.id)])
self.picking.move_ids.get_subcontracted_mo()
self.picking._get_subcontract_production()
backorder_id._get_subcontract_production()
self.picking.state
self.picking._get_subcontract_production()
self.picking._get_subcontract_production().state
self.picking._get_subcontract_production()._get_subcontracting_move()
self.picking._get_subcontract_production()._get_subcontracting_moves()
self.picking._get_subcontract_production()._get_subcontractmoves()
self.picking._get_subcontract_production()._get_subcontract_move()
self.picking._get_subcontract_production()
move_line.qty_done
self.move_line_ids
self.move_line_ids.qty_done
move.picking_id
move.picking_id.immediate_transfer
move.from_immediate_transfer
picking.move_line_ids
to_compute_ids
self
name
record[name]
self[name]
self.move_ids
move.from_immediate_transfer
move.product_qty
value
self
field
get_missing_ids
self.env.cache(get_missing_ids)
self.env.cache.get_missing_ids()
self.env.cache.get_missing_ids(real_recs, field)
list(self.env.cache.get_missing_ids(real_recs, field))
field
mls.picking_id
mls.picking_id.move_ids
mls.picking_id.move_line_ids
mls.move_id
mls.picking_id.move_ids
mls.picking_id.move_ids.move_line_ids
mls.picking_id.move_line_ids
mls.picking_id
mls.picking_id.move_ids
mls.picking_id.move_ids[0].move_line_ids
mls.picking_id.move_ids[1].move_line_ids
mls.picking_id.move_line_ids
missing_names
fields_list
defaults
self
self.move_ids
self.move_ids.move_line_ids
self.move_ids.move_line_ids.picking_id
self
move.show_details_visible
move.state
self
self.picking_id
self.picking_type_id
self.picking_type_code
self.picking_code
method
self.qty_done
self.env
self.user
self.env.user
move.quantity_done
self.mapped('lot_name')
self[1].move_line_ids
self.move_line_ids
self[0].move_line_ids
line.product_id.categ_id.property_cost_method
line.product_id.cost_method
line.purchase_line_id
invoice.name
invoice.line_ids
self.group_mrp_routings
self.env.context
self.env.user.has_group('mrp.group_mrp_routings')
move.purchase_line_id
move.invoice_line_id.purchase_line_id
move.invoice_line_ids.purchase_line_id
move.invoice_line_ids.purchase_line_id.move_ids
move.invoice_line_ids.purchase_line_id.move_ids._get_subcontract_production()
move.invoice_line_ids.purchase_line_id.move_ids._get_subcontract_production().picking_ids
move.invoice_line_ids.purchase_line_id.move_ids._get_subcontract_production().picking_idsp
move.invoice_line_ids.purchase_line_id.move_ids._get_subcontract_production().picking_ids
move.invoice_line_ids.purchase_line_id.move_ids._get_subcontract_production().picking_ids.move_ids
move.invoice_line_ids.purchase_line_id.move_ids._get_subcontract_production().picking_ids.move_ids.name
move.invoice_line_ids.purchase_line_id.move_ids._get_subcontract_production().picking_ids.move_ids.reference
move.invoice_line_ids.purchase_line_id.move_ids._get_subcontract_production().picking_ids.move_ids.move_dest_ids
move.invoice_line_ids.purchase_line_id.move_ids._get_subcontract_production().picking_ids.move_ids.move_dest_ids.reference
move.invoice_line_ids.purchase_line_id.move_ids
move.invoice_line_ids.purchase_line_id.move_ids.reference
move_line.product_id
move_line.product_uom_id
self.product_uom
self.picking_id
self.env.contexst
self.env.contex
self.env.context
tracking
lot_namesm
lot_names
loc_dest
default_vals
rfq_lines_date_planned
rules.name
a = self.env['purchase.order.line'].search([('order_id', '=', 14)])
a
a.product_id
a.date_planned
a.state
stock_moves_and_date
[x[0].reference for x in stock_moves_and_date]
stock_moves_and_date
move.move_dest_ids
move.move_dest_ids.rule_id
move.move_dest_ids.reference
move.rule_id
move.name
move.reference
move.rule_id
move.move_dest_ids
move.move_dest_ids.rule_id
move.move_dest_ids.rule_id.name
order_date
purchase.date_order
date_order
order_date
purchase.date_order
datetime
datetime.today
datetime.today()
fields.datetime.now()
mps_screw
procurements_by_po_domain
domain
po.date_planned
po.date_planned_mps
self
forecasts_to_replenish
list(forecasts_to_replenish
list(forecasts_to_replenish)
len(forecasts_to_replenish))
len(list(forecasts_to_replenish))
procurements
supplier
fields.Date.today()
self.env['purchase.order.].search([dom for dom in domain])
self.env['purchase.order'].search([dom for dom in domain])
procurement
procurements
self.env['purchase.order'].search([('partner_id', '=', 92)])
self.env['purchase.order'].search([('partner_id', '=', 92)]).date_planned_mps
self.env['purchase.order'].search([('partner_id', '=', 92)]).date_order
self.env['purchase.order'].search([('partner_id', '=', 92)]).date_planned
self.env['purchase.order'].search([('partner_id', '=', 96)]).date_planned
self.env['purchase.order'].search([('partner_id', '=', 96)]).date_planned_mps
self.env['purchase.order'].search([('partner_id', '=', 99)]).date_planned_mps
self.env['purchase.order'].search([('partner_id', '=', 99)]).order_line_ids
self.env['purchase.order'].search([('partner_id', '=', 99)]).order_lines
self.env['purchase.order'].search([('partner_id', '=', 99)]).orders_line
self.env['purchase.order'].search([('partner_id', '=', 99)]).order_line
self.env['purchase.order'].search([('partner_id', '=', 99)]).order_line.date_planned
self.env['purchase.order'].search([('partner_id', '=', 99)]).date_planned
po.order_line
self.order_id.date_planned
c
op_1.name
po.order_line
po.order_line.price_unit
schedule_date
vals
vals_list
key
self.env['stock.move.line'][key].browse(value).display_name
self
self.move_line_ids
self.move_line_ids.lot_name
self.move_line_ids.qty_done
move1.picking_type_
move1.picking_type_id
moves.picking_type_id
self.picking_type_id
vals
bad_names
self._fields.items()
self.productA.quant_ids
self.productA.qty_available
mls.product_id
mls.product_id.tracking
mls.qty_done
picking_pick.move_ids
picking_pick.move_ids.move_line_ids
stock_return_picking
new_picking.move_ids
new_picking.move_ids.product_uom_qty
return_pack_picking.move_ids
return_pack_picking.move_ids.move_line_ids
return_pack_picking.move_ids.product_uom_qty
return_pack_picking.state
return_ship_picking.state
return_ship_pickinp.move_ids.move_line_ids.qty_done
return_ship_picking.move_ids.move_line_ids.qty_done
taken_quantity
move_line_vals_list
new_picking.move_ids
new_picking.move_ids.move_line_ids
new_picking.move_ids
new_picking.move_ids.product_uom_qty
location_id
location_id.name
quant
quants
quants.location_id.name
location_id.name
quants.quantity
quants.reserved_quantity
quants_by_product
quants_by_product[move.product_id]
return_ship_picking.move_ids
return_ship_picking.move_ids.quantity_done
return_ship_picking.location_dest_id
return_ship_picking.move_ids.move_dest_ids
return_ship_picking.move_ids
return_pack_picking.move_ids.move_orig_ids
return_pack_picking.move_ids.move_orig_ids[0].reference
return_pack_picking.move_ids.move_orig_ids[1].reference
return_pack_picking.move_ids.move_orig_ids[0]
return_pack_picking.move_ids.move_orig_ids[0].state
quants.location_id
quants.location_id.name
quants.quantity
return_ship_picking.location_dest_id
return_ship_picking.location_dest_id.name
receipt_form
receipt_form.keys()
receipt_form.view_id
receipt_form.view
receipt_form._view
receipt_form._view['tree'].text
receipt_form._view['tree'].html
receipt_form._view['tree'].node
receipt_form._view
receipt_form._view['fields']
receipt_form._view['fields']['move_ids']
receipt_form._view['fields']['move_without_package_ids']
receipt_form._view['fields']
receipt_form._view['fields']['move_ids_without_package']
receipt_form._view['fields']['move_ids_without_package']['edition_view']
receipt_form._view['fields']['move_ids_without_package']['edition_view']['fields']['quantity_done']
self._get_modifier(field_name, 'readonly')
self.picking_id
self.picking_id.picking_type_id
self.picking_id.picking_type_id.show_operations
self.picking_id.picking_type_id.name
allowed_states
receipt1.move_ids.state
receipt2.move_ids.state
out
out.state
receipt1.state
receipt1.move_ids.state
delivery.state
delivery.move_ids
delivery.move_ids.state
delivery.move_ids.product_uom_qty
allowed_states
pick_picking.move_ids
pick_picking.move_ids_without_package
pick_picking.move_ids.package_level_id
pick_picking.move_ids.mapped('picking_type_entire_pack')
pick_picking.move_ids.mapped('picking_type_entire_packs')
pick_picking.move_ids.package_level_id
second_pack.quant_ids
pick_picking.move_line_ids
pick_picking.move_line_ids.mapped('qty_done'}
pick_picking.move_line_ids.mapped('qty_done')
pick_picking.move_line_ids.mapped('result_package_id')
first_pack.quant_ids
self.move_dest_ids
self.move_dest_ids.mapped('state')
self
self[0].reference\
self[0].reference
self.move_dest_id
self.move_dest_ids
self.move_dest_ids[0].reference
self.move_dest_ids[0].state
packing_picking.state
packing_picking.move_ids.state
packing_picking.move_ids.mapped('state')
pick_picking.move_ids.move_dest_ids.picking_id
packing_picking
self.move_ids.move_dest_ids[0].state
receipt1.move_ids.product_id.stock_move_ids
receipt1.move_ids.product_id.stock_move_ids.mapped('state')
receipt1.move_ids.product_id.stock_move_ids.mapped('product_uom_qty')
move.forecast_availability
delivery1.move_ids
delivery1.move_ids.state
receipt1.move_ids.state
delivery1.move_ids.state
receipt1.move_ids.state
receipt2.move_ids.state
delivery2.state
delivery1.state
[line['document_out']['id'] for line in lines]
[delivery_by_date.id, delivery_at_confirm.id, delivery_by_date_priority.id, delivery_manual.id]
[line['document_out']['id'] for line in lines]
[delivery_by_date.id, delivery_at_confirm.id, delivery_by_date_priority.id, delivery_manual.id]
delivery_by_date.scheduled_date
delivery_at_confirm.scheduled_date
delivery_by_date_priority.scheduled_date
delivery_by_date.priority
delivery_at_confirm.priority
delivery_by_date_priority.priority
delivery_manual.priority
delivery_manual.scheduled_date
delivery_by_date.scheduled_date
delivery_by_date.reservation_date
delivery_by_date.move_ids.reservation_date
move.state
move.product_uom_qty
self.move_id.move_line_nosuggest_ids
self.move_id.move_line_nosuggest_ids.mapped('date_deadline')
self.move_id.move_line_nosuggest_ids.mapped('date_expiry')
self.move_id.move_line_nosuggest_ids.mapped('expiration_date')
self
lines
picking.move_line_ids
move_lines
move.move_line
move.move_line_ids
move.move_line_ids.mapped('qty_done')
move.quantity_done
ml2.picking_id.immediate_transfer
ml2.picking_id.move_ids
ml2.picking_id.move_ids.quantity_done
ml2.picking_id.move_ids.product_uom_qty
picking._is_subcontract
picking._is_subcontract)(
picking._is_subcontract()
receipt.move_ids
receipt.move_ids.move_line_ids
receipt.move_ids.state
receipt.move_ids
receipt.move_ids.product_id
kit
move.state
product.id
compo.id
self.product_id
self.product_id[1].name
move.product_id
self.product_id
moves.product_id
moves.product_uom_qty
moves.quantity_done
move.picking_id
move.picking_id.immediate_transfer
moves.state
moves.product_uom_qty
moves.quantity_done
moves_todo[1].quantity_one
moves_todo[1].quantity_done
moves.quantity_done
merge_into.quantity_done
receipt.move_ids.mapped('quantity_done')
receipt.move_ids[0].quantity_done
merge_into.product_id.name
moves.product_id.name
merge_into.product_uom_qty
merge_into.quantity_done
self.product_id
self.product_id.name
kit.name
self.quantity_done
self
merge_into.quantity_done
self[1].product_id.name
self.product_id.name
self.quantity_done
extra_move.quantity_done
extra_move.product_uom_qty
merge_into.quantity_done
moves.product_id
moves.product_id.name
moves.quantity_done
moves.product_uom_qty
merge_into.quantity_done
move_product_uom_qty
move.product_uom_qty
receipt_picking.move_ids
receipt_picking.move_ids.product_uom_qty
receipt_picking.move_ids.quantity_done
receipt_picking.move_ids
receipt_picking.move_ids.move_line_ids
receipt_picking.move_ids.move_line_ids.qty_done
receipt_picking.move_ids.move_line_ids
receipt_picking.move_ids.move_line_ids.mapped('qty_done')
receipt_picking.move_line_ids
receipt_picking.move_ids
receipt_picking.move_ids.move_line_ids
receipt_picking.move_ids.move_line_ids.reserved_qty
self.move_id
self.move_id.reserved_availability
self.qty_done
self.move_id
self.move_id.move_line_ids
receipt_picking.move_ids
receipt_picking.move_ids.move_line_ids
receipt_picking.move_ids.move_line_ids.reserved_qty
receipt_picking.move_ids
receipt_picking.move_ids.move_line_ids.mapped('reserved_qty')
self
self.move_ids.product_uom_qty
self.move_ids.quantity_done
receipt_picking.move_ids.quantity_done
receipt_picking.move_ids.move_line_ids
move._quantity_done_sml()
receipt_picking.move_ids
ml1.move_id
ml2.move_id.move_line_ids
ml2.move_id.move_line_ids.mapped('qty_done')
picking.move_line_ids
ml1
ml2.move_id
ml1.move_id
ml1.move_id.product_uom_qty
new_product_qty
self.workorder
self.workorder_ids
workorder.date_finished
workorder.date_start
workorder.date_finished
workorder.duration
workorder.expectedduration
workorder.expected_duration
workorder.duration_expected
workorder
self
self.duration_expected
moves.state
move.quantity_done
new_move
self
picking_type
picking_type.company_id
self.env.company.nomenclature_id.name
self.rule_ids
procurements[0][1]
procurements[0][1].name
pickings_to_confirm.name
moves.procure_method
rule
procurement.product_id
procurement.location_id
procurement.location_id.name
procurement.values
moves.procure_method
domain
self.env['stock.location'].browse(6).name
route_ids.naem
route_ids.nane
route_ids.name
domain
consignment_enabled
move.show_reserved
move.picking_type_id
move.show_reserved
self.receipt.state
self.receipt
self.receipt.state
self
self._fields
self._fields.values()
self._fields.values()[0]
self._fields.values().next()
self._fields.values().next
list(self._fields.values())[0]
list(self._fields.values())[0].stored
list(self._fields.values())[0].store
list(self._fields.values())[0].compute
[f for f in self._fields.values() if not f.store and f.compute]
[f.name for f in self._fields.values() if not f.store and f.compute]
self.location_dest_id
self.location_dest_id.name
self.env['stock.move'].search([('location_id', '=', 132)])
self.env['stock.move'].search([('location_id', '=', 132)]).state
self.search(static_domain)
self.search(static_domain + domains)
self.search(expression.AND([static_domain, expression.OR(domains)])
self.search(expression.AND([static_domain, expression.OR(domains)]))
self.location_id
move_pack_cust.state
move_pack_cust.location_id
move_pack_cust.reservation_date
self.env['stock.move'].search([('reservation_date', '<=', fields.Date.today())])
inventory_quant.quantity
self.env['stock.move'].search([('location_id', '=', inventory_quant.location_id.id)])
self.env['stock.move'].search([('location_id', '=', inventory_quant.location_id.id)])[1].reference
self.env['stock.move'].search([('location_id', '=', inventory_quant.location_id.id)])[1].state
self.env['stock.move'].search([('location_id', '=', inventory_quant.location_id.id)])
self.location_dest_id
self.location_dest_id.name
moves.location_id
moves.location_id.name
inventory_quant.location_id
inventory_quant.location_id.name
self.env['stock.move'].search([('location_id', '=', inventory_quant.location_id.id)])
self
quant.quantity
moves_todo
self.move_dest_ids
self.move_dest_ids.state
[assigned_moves_ids.keys()][0][0].name
available_move_lines
list(available_move_lines.keys())[0][0].name
taken
taken_quantity
location_id
quants
quants.location_id
quants.location_id[0].name
available_move_lines
move.move_line_ids
picking_out_3
picking_out_3.move_ids
picking_out_3.move_ids.quantity
picking_out_3.move_ids.picked
self.env._context
self._context
self.batch.move_line_ids
self.move_line_ids
self.move_line_ids.location_dest_id
self.move_line_ids.location_dest_id.name
move_line_ids.location_dest_id
package.location_id
package_level.location_dest_id
self.mapped('state')
self[0].move_ids.quantity
self[0].move_ids.location_dest
self[0].move_ids.location_dest_id
self[0].move_ids.move_line_ids.result_package_id
self[0].move_ids.move_line_ids.result_package_id.location_dest_id
self[0].move_ids.move_line_ids.result_package_id.location_id
self[0].move_ids.move_line_ids.result_package_id.quant_ids
ml.production_id
ml.raw_material_production_id
ml.move_id.raw_material_production_id
ml.move_id.production_id
move.quantity
production.move_finished_ids.quantity
man_order.state
res.state
res.qty_producing
mo.qty_producing
mo.product_qty
self
self.move_raw_ids.mapped('quantity')
move_lines_to_unlink
self.move_raw_ids.mapped('quantity')
self.move_raw_ids[0].move_line_ids
self.move_raw_ids[0].move_line_ids.quantity
self.move_raw_ids.mapped('quantity')
self.move_raw_ids
backorder_moves
backorder_moves.mapped('quantity')
self.move_raw_ids
self.move_raw_ids.mapped('quantity')
production.move_raw_ids
production.bom_id.bom_line_ids
production.bom_id.bom_line_ids.product_qty
production.bom_id.bom_line_ids.mapped('product_qty')
production.move_raw_ids.mapped('picked')
production.move_raw_ids.mapped('quantity')
backorder
mo_backorder.state
mo_backorder.move_raw_ids
mo_backorder.move_raw_ids.mapped('state')
self.move_raw_ids
self.move_raw_ids.mapped('quantity')
production.qty_produc
production.qty_producing
production.move_raw_ids.mapped('quantity')
production.bom_id.product_qty
production.bom_id.bom_line_ids
production.bom_id.bom_line_ids.mapped('quantity')
production.bom_id.bom_line_ids.mapped('product_qty')
self.move_finished_ids.move_line_ids
self.move_finished_ids.quantity
self.qty_producing
mo.qty_producing
mo.move_finished_ids.quantity
mo.move_finished_ids
mo.move_finished_ids.quantity
mo.move_finished_ids.state
mo.qty_producing
finish_moves
finish_moves.quantity
order.qty_producing
mrp_productions[0]
mrp_productions[0] = mo_form.save()
mo.move_raw_ids
mo.move_raw_ids[0].product_uom_qty
mo.move_raw_ids[0].quantity
mo.move_raw_ids[0].product_id
c1
mo.move_raw_ids[1].product_uom_qty
mo.bom_id.bom_line_ids
mo.bom_id.bom_line_ids[1].product_qty
mo.move_raw_ids[1].quantity
move.product_uom_qty
move.production_id
move.raw_material_production_id
mo.move_raw_ids
mo.move_raw_ids.mapped(product_uom_qty')
mo.move_raw_ids.mapped('product_uom_qty')
move.production_id
move.product_uom_qty
move._should_bypass_set_qty_producing
move._should_bypass_set_qty_producing()
move.product_uom
_qty
move.product_uom_qty
move.quantity
self.qty_producing
backorders
backorders[1]
backorders[1].state
backorders[1].move_raw_ids
backorders[1].move_raw_ids.mapped('state')
backorder_moves
backorder_moves.mapped('state')
to_assign
backorder
backorder_moves
to_assign.production_id
mo.move_raw_ids
mo.move_raw_ids.product_uom_qty
mo.move_raw_ids.quantity
mo.move_raw_ids.product_id.free_qty
mo.move_raw_ids.quantity
mo.move_raw_ids.product_id.free_qty
mo.move_raw_ids.quantity
mo.move_raw_ids.product_id.free_qty
mo_2.move_raw_ids
mo_2.move_raw_ids.mapped('quantity')
self.move_raw_ids
self.move_raw_ids.mapped('quantity')
move_raw.quantity
mo_2.quantity
mo_2.move_raw_ids.mapped('quantity')
self.qty_producing
move.product_id.tracking
self.raw_material_production_id
self.raw_material_production_id.use_auto_consume_components_lots
self.manual_consumption
self._origin.manual_consumption
self.has_tracking
moves
move.state
move.quantity
move.raw_material_production_id
move.production_id
move.production_id,product_id
move.production_id.product_id
move.product_id
move.unit_factor
self.qty_producing
backorder_mo.move_finished_ids
backorder_mo.move_finished_ids.quantity
backorder_mo.move_finished_ids.picked
self.env['stock.quant']._get_available_quantity(p_final, self.stock_location)
mrp_productions[i].move_raw_ids
mrp_productions[i].move_raw_ids.mapped('has_tracking')
mrp_productions[i].move_raw_ids.move_line_ids
mrp_productions[i].move_raw_ids.move_line_ids.lot_id
mrp_production[i].move_raw_ids
mrp_productions[i].move_raw_ids
mrp_productions[i].move_raw_ids.mapped('product_uom_qty')
mrp_productions[i].move_raw_ids.mapped('quantity')
mrp_productions[i].move_raw_ids.mapped('picked')
self.move_raw_ids
self.move_raw_ids.mapped('state')
mov.raw_material_production_id
move.has_tracking
mo.move_raw_ids
mo.move_raw_ids.mapped('quantity')
quant
self.raw_none
self.raw_none.free_qty
self.mo_none_tmpl
self.raw_none.free_qty
self.move_line_ids
mov.has_tracking
mo.move_raw_ids.mapped('has_tracking')
mo.move_raw_ids[1].quantity
mo.move_raw_ids[1].move_line_ids
mo.move_raw_ids[1].move_line_ids.mapped('lot_id')
mo.move_raw_ids[1].move_line_ids[0].lot_id
mo.move_raw_ids[1].move_line_ids[1].lot_id
mo.move_raw_ids[1].move_line_ids.mapped('quantity')
self.has_tracking
self.move_line_ids
self.move_line_ids.lot_id
self.move_line_ids
self.move_raw_ids.move_line_ids[1]
self.has_tracking
move.has_tracking
move.move_line_ids
move.move_line_ids.quantity
move.quantity
move.move_line_ids.lo_ids
move.move_line_ids.lot_id
mo.move_raw_ids
mo.move_raw_ids.mapped('quantity')
mo.move_finished_ids
mo.move_finished_ids.product_uom_qty
mo.move_finished_ids.
mo.move_finished_ids
mo.move_finished_ids.mapped('state')
mo.procurement_group_id.mrp_production_ids
mo.procurement_group_id.mrp_production_ids[0]
mo.procurement_group_id.mrp_production_ids[0].move_raw_ids
mo.procurement_group_id.mrp_production_ids[0].move_raw_ids[1].move_line_ids
mo.procurement_group_id.mrp_production_ids[0].move_raw_ids[1].move_line_ids.mapped('lot_id')
mo.procurement_group_id.mrp_production_ids[0].move_raw_ids[1].move_line_ids.mapped('quantity')
initial_move
initial_move.has_tracking
ml_by_move
len(ml_by_move)
moves
move_qty_to_reserve
move.raw_material_production_id
move.raw_material_production_id.qty_producing
move.raw_material_production_id.product_qty
moves
moves[0].product_uom_qty
taken_qty
taken_qty_uom
move_line
move_line.quantity
ml_by_move
move_qty_to_reserve
taken_qty
move_line.quantity
ml_by_move
ml[0] for ml in ml_by_move
[ml[0] for ml in ml_by_move]
taken_qty
ml_vals
quantity
move_qty_to_reserve
move.move_line_ids
taken_qty
move_lines_to_unlink
initial_move
initial_move.has_tracking
backorders
backorders[0].move_raw_ids
backorders[0].move_raw_ids[1].move_line_ids
backorders[0].move_raw_ids[0].move_line_ids
self
self.move_raw_ids[1].move_line_ids
self.move_raw_ids[1].move_line_ids.mapped('quantity')
move_to_backorder_moves
mo.move_raw_ids
self.production_id
self.production_id.move_raw_ids
self.production_id.move_finished_ids
initial_move.has_tracking
moves
move
move_lines_to_unlink
new_moves_vals
len(new_ml_vals)
len(move_line_vals)
len(move_lines_vals)
self
self.move_raw_ids[1].move_line_ids
self.move_raw_ids[1].move_line_ids.mapped('quantity')
backorders[0].move_raw_ids[1].move_line_ids.mapped('quantity')
backorders[0].move_raw_ids[1]
backorders[0].move_raw_ids[1].move_line_ids
ml_by_move
ml_by_move[0][1]
ml_by_move[0][1].move_id
backorders[0].move_raw_ids[1]
backorders[1].move_raw_ids[1]
self.move_raw_ids[1]
ml_by_move[0][1].move_id
ml_by_move[1][1].move_id
self.move_ids
self.move_ids.state
self.move_ids
receipt.move_ids
receipt.move_ids.mapped('state')
self.mapped('picked')
moves_todo
moves_todo.mapped('quantity')
moves_todo.move_line_ids
moves_todo.move_line_ids.lot_id
move_to_backorder_moves
initial_move.product_id.name
ml_by_move
ml_by_move[0][2]
ml_by_move[1][2]
mo
.state
mo.state
mo.product_qty
mo.qty_produced
mo.lot_id
mo.lot_producing_od
mo.lot_producing_id
produce_moves
produce_moves.state
produce_moves.mapped('state')
produce_moves.move_line_ids
produce_moves.move_line_ids.lot_id
produce_moves.mapped('quantity')
move.picking_type_id.name
move.reservation_date
move._should_bypass_reservation()
move.location_id.name
move.unbuild
move.unbuild_id
line
line.product_id.tracking
self._context
mo.move_raw_ids
mo.move_raw_ids.mapped('quantity')
mo.move_raw_ids.mapped('picked')
mo.use_auto_consume_components_lots
self.move_raw_ids.state
self.move_raw_ids.mapped('state')
self.move_raw_ids.mapped('quantity')
self.mapped('quantity')
set_consumed_qty
active_production.move_raw_ids
active_production.move_raw_ids.mapped('quantity')
active_production.move_raw_ids.mapped('picked')
production
production.move_raw_ids
production.move_raw_ids.mapped('state')
production.reserve_visible
backorder.state
backorder.move_raw_ids.mapped('state')
initial_move
move_to_backorder_moves
initial_move.raw_material_production_id
initial_move.quantity
set_consumed_qty
mo.move_raw_ids.quantity
product_component.free_quantity
product_component.free_qty
product_component.qty_available
mo.procurement_group_id.mrp_production_ids
mo.procurement_group_id.mrp_production_ids[1].state
mo.move_raw_ids
mo.move_raw_ids[2].product_id
self.product_4
move.manual_consumption
move.picked
picking_receipt.state
picking_receipt.move_ids.quantity
picking_receipt.move_ids.move_line_ids
picking_receipt.move_ids.move_line_ids.mapped('lot_name')
mo.procurement_group_id.mrp_production_ids[2].move_raw_ids
mo.procurement_group_id.mrp_production_ids[2].move_raw_ids.mapped('quantity')
mo.move_raw_ids
mo.move_raw_ids[1].move_line_ids
mo.move_raw_ids[1].move_line_ids[1].quantity
mo.move_raw_ids[1].move_line_ids[0].quantity
mo.bom_id.bom_line_ids
mo.bom_id.bom_line_ids.mapped('product_qty')
mo.move_raw_ids.mapped('quantity')
amounts 
move_to_backorder_moves
initial_move.has_tracking
initial_move.quantity
ml_by_move
quantity
assigned_moves
backorder_moves
partially_assigned_moves
backorder_moves.product_uom_qty
backorder_moves.quantity
initial_move
initial_move.product_uom_qty
initial_move.quantity
ml_by_move
initial_move.picked
initial_move.state
ml_by_move
initial_move
initial_move.product_uom_qty
initial_move.quantity
ml_by_move
taken_qty
initial_
initial_move
move
new_ml_vals
move
to_assign
assigned_moves
backorder_moves.quantity
backorder_moves.state
mo_backorder
mo_backorder.reserve_visible
mo_backorder.state
mo_backorder.move_raw_ids
mo_backorder.move_raw_ids.mapped('state')
backorder_move
mo.move_raw_ids
mo_backorder.move_raw_ids
production.move_raw_ids
mo_backorder.move_finished_ids
move_to_backorder_moves
mo1.move_finished_ids.move_line_ids
mo1.move_finished_ids.move_line_ids.lot_id
sn
mo.state
mo.move_raw_ids
mo.move_raw_ids.mapped('quantity')
pick01.move_line_ids
pick01.move_line_ids.quantity
so.order_line.qty_delivered
move.state
move.quantity
move.reference
move
move.picking_id
moves.mapped('has_tracking')
moves.move_line_ids
moves.move_line_ids.location_id
moves_remaining.quantity
return_pick.move_ids.move_line_ids.lot_id
return_pick.move_ids.move_line_ids.lot_id.name
self.state
receipt01
receipt01.move_ids
receipt01.move_ids.quantity
receipt01.state
workorder.qty_produc
workorder.qty_producing
self.qty_producing
self.qty_remaining
backorder.qty_producing
self.action_back()
self.action_back()['res_id']
backorder.workorder_ids
backorder.workorder_ids.operation_id
backorder.workorder_ids.mapped('state')
self.operation_id
backorder.workorder_ids
backorder.workorder_ids.operation_id
backorder.workorder_ids[0]
backorder.workorder_ids[0].state
backorder.reservation_state
backorder.move_raw_ids.mapped('quantity')
backorder.move_raw_ids
move_to_assign.product_uom_qty
move_to_assign.quantity
backorder.move_raw_ids
backorder.move_raw_ids.state
backorder.move_raw_ids.product_uom_qty
backorder.qty_producing
backorder.move_raw_ids.product_uom_qty
backorder.move_raw_ids.has_tracking
backorder.move_raw_ids.product_uom_qty
backorder.move_raw_ids.quantity
backorder.move_raw_ids.product_uom_qty
backorder.move_raw_ids.state
backorder.move_raw_ids.product_uom_qty
backorder.move_raw_ids.has_tracking
backorder.move_raw_ids.state
backorder.move_raw_ids.product_uom_qty
backorder.move_raw_ids.quantity
backorder.move_raw_ids.quantity_done
backorder.move_raw_ids.reserved_availability
mo.move_raw_ids[1].operation_id
mo.move_raw_ids[2].operation_id
mo.move_raw_ids.mapped('picked')
self.move_id
sub.picking_ids.move_ids
sub.picking_ids.move_ids.quantity
sub.picking_ids.move_ids.product_uom_qty
util.env(cr)
util.env(cr).keys()
list(util.env(cr).keys())
util.env(cr)['stock.move']
util.env(cr)['stock.picking']
util.env(cr)['ir.action']
list(util.env(cr).keys())
util.env(cr)['sms.sms']
list(util.env(cr).keys())
ro.move_ids
ro.move_ids[1].product_uom_qty
ro.move_ids[1].quantity_done
ro.move_ids[1].move_line_ids
ro.move_ids[1].move_line_ids.lot_id
node
moves_to_reserve
moves_to_reserve.move_line_ids
partially_available_moves_ids
ml.location_dest_id
ml.location_dest_id.name
move
move.reference
taken_quantity
move_location_id
move_location_id.name
self.env.context
moves_to_reserve.move_orig_ids
moves_to_reserve.move_orig_ids.state
move.location_id.name
move._update_reserved_quantity(min(quantity, need), move.location_id, quants, lot_id, package_id, owner_id)
quants
quants.location_id
quants.location_id.name
quants.location_id.mapped('name')
layers[1]
layers[1].price_diff_value
round(layers[1].value, 2)
quantity
expected_qty_by_product
move.product_id
move.product_id in expected_qty_by_product
quantity
record
record.move_id
record.move_id.product_qty
record
origin_move
origin_move.quantity
record.move_id
origin_move.quantity
record.move_id.quantity
record.move_id
record.move_id.quantity
record.move_id._origin.quantity
record.move_id.quantity
record.move_id.move_line_ids
sum(record.move_id.move_line_ids.mapped('quantity'))
sum(record.move_id._origin.move_line_ids.mapped('quantity'))
record.move_id.quantity
record.move_id.move_line_ids
lines_to_check.mapped('lot_name')
delivery_order.move_ids
delivery_order.move_ids.move_line_ids
delivery_order.move_ids.move_line_ids.quantity
delivery_order.move_ids.move_line_ids.location_id
self.pack_location
delivery_order.move_ids.move_line_ids.location_dest_id
self.name
move.reference
move.move_orig_ids
move.move_orig_ids.mapped('state')
move.move_orig_ids
move.origin_returned_move_id
move.returned_move_id
move.returned_move_ids
move.move_orig_ids
move.move_orig_ids[0].move_orig_ids
move.move_orig_ids[0].state
move.move_orig_ids[0].returned_move_ids
move.move_orig_ids[0].returned_move_ids.reference
self.product.tracking
picking_pack_cust.move_line_ids
picking_pack_cust.move_line_ids.mapped('lot_name')
picking_pack_cust.move_ids.move_line_ids
picking_pack_cust.move_ids.move_line_ids.lot_id.mapped('name')
delivery_order
delivery_order.location_id
delivery_order.move_ids
delivery_order.move_ids.state
delivery_order.move_ids.product_uom_qty
picking_pick
picking_pick.move_ids
picking_pick.move_ids.product_uom_qty
picking_pick.move_ids.quantity
todo_moves.state
picking_pick.move_ids.move_dest_ids
picking_pick.move_ids.move_dest_ids.picking_id
picking_client.move_ids
picking_client.move_ids.state
mo.workorder_ids
mo.workorder_ids.check_ids
production.picking_ids
self.env.user.has_group('stock.group_stock_multi_locations')
man_order.product_id
man_order.move_finished_ids.product_id
man_order.product_id
self.product_1
self.product_4
mo.move_raw_ids
mo.move_raw_ids[0].move_line_ids
mo.move_raw_ids[1].move_line_ids.quantity
self.product_to_use_1.qty_available
self.product_to_use_2.qty_available
sam_move.product_uom
sam_move.product_uom.name
production.product_uom_id
self.product_4.uom_id
self.product_4.uom_id.na,e
self.product_4.uom_id.name
pick_output.state
pick_output.move_ids.move_orig_ids
pick_output.move_ids.move_dest_ids
pick_output.action_assign()
pick_output.state
;q
pick_output.move_ids
pick_output.move_ids.location_id
mo.location_dest_id
pick_output.move_ids.state
pick_output.move_ids.procure_method
pick_output.move_ids.reservation_date
pick_output.picking_type_id.reservation_method
self.reservation_date
fields.Date.today()
self.picking_type_id
self.picking_type_id.reservation_method
self.car_color_red
self.car_color_blue
self.car_gps_yes
self.car_gps_no
play
line
nbrs
i_row
i_col
nbrs[-1]
line
linr
line
wining
guesses
wining
cards
index
wining
cards
move.location_dest_id.name
move.location_dest_id.display_name
move.warehouse_id
move.warehouse_id.name
procurement.values
rule
rule.company_id
self.env.compan
self.env.company
move_values
self.env['stock.route'].browse(4)
self.env['stock.route'].browse(4).name
move_values
self.env['stock.route'].browse(26).name
move.location_id.display_name
rule.name
move_values
values
replenish_wizard.route_id
self.line_ids
self.line_ids.mapped('balance')
self
self.price_subtotal
self.
self
self.tax
self.tax_ids
self.tax_ids.name
self.price_unit
self.price_subtota;
self.price_subtotal
self.env.user
self.env.user.name
self.is_refund
out_layer_qty
invoiced_layer_qty
out_layer_qty
invoiced_layer_qty
self.product1.qty_availablel
self.product1.qty_available
self.product1.quant_ids
self.product1.stock_quant_ids
self.product1.stock_quant_ids.location_id.mapped('name
self.product1.stock_quant_ids.location_id.mapped('name')
out_layer_qty
total_layer_qty_to_invoice
remaining_
remaining_out_qty_to_invoice
out_qty_to_invoice
unit_valuation_difference
aml_price_unit
layer_price_unit
rule
rule.name
seeds
end
s
start
seeds
seed
s
seeds
1.5 * 8000 / 3600
sum(times)
self.seller_ids
self.seller_ids.name
self.seller_ids.partner_id
record.analytic_distribution.keys()
record.analytic_distribution
[x for x in record.analytic_distribution]
[x for x in record.analytic_distribution if record.analytic_distribution]
hand.values()
list(hand.values())
list(hand.values()).sort()
list(hand.values())
sorted(list(hand.values())
sorted(list(hand.values()))
map['AAA']
node
map['SQV']
sequence
list(map.keys())
re.match(r"\w{2}T", 'NQT')
re.match(r"\w{2}T", 'NQT').groups()
re.match(r"\w{2}T", 'NQT').groups(0)
re.match(r"\W{2}T", 'NQT').groups(0)
re.match(r"\w{2}T", 'NQT').groups(0)
re.match(r"\w{2}T", 'NQT').groups(1)
re.match(r"\w{2}T", 'NQT')
re.match(r"\w{2}T", 'NQA')
partner_ids.name
self._context
action
self
move.procure_method
rules.name
mo.move_finished_ids
mo.move_finished_ids.quantity_done
mo.move_finished_ids.product_uom
mo.product_uom_id
mo.move_finished_ids.move_line_ids
mo.move_finished_ids.move_line_ids.mapped('qty_done')
mo.move_finished_ids.move_line_ids.mapped('state')
mo.qty_producing
mo.qty_produced
mo.move_finished_ids
mo.move_finished_ids.move_line_ids
move.move_line_ids
move.move_line_ids.qty_done
ml.product_uom_id
self.product_uom
self.product_uom.rounding
self
self.move_line_ids.reserved_uom_qty
self.workorder_id.current_quality_check_id
self.quality_state
self._context
ro.move_ids
ro.move_ids.location_id.name
ro.move_ids.location_dest_id.na,e
ro.move_ids.location_dest_id.name
self.env['stock.move.line'].search_count([('lot_id', '=', move_line.lot_id.id)])
self.env['stock.move.line'].search([('lot_id', '=', move_line.lot_id.id)])
self.env['stock.move.line'].search([('lot_id', '=', move_line.lot_id.id), ('state', '=', 'done')])
self.env['stock.move.line'].search([('lot_id', '=', move_line.lot_id.id), ('state', '=', 'done'), ('location_dest_id.usage', '=', True)])
self.env['stock.move.line'].search([('lot_id', '=', move_line.lot_id.id), ('state', '=', 'done'), ('location_dest_id.scrap_location', '=', True)])
self.env['stock.move.line'].search([('lot_id', '=', move_line.lot_id.id), ('state', '=', 'done'), ('location_dest_id.scrap_location', '=', True)]).location_id.usage
self.env['stock.move.line'].search([('lot_id', '=', move_line.lot_id.id), ('state', '=', 'done'), ('location_dest_id.scrap_location', '=', True)]).product_id
ro.product_id
ro.move_ids.product_id
self.env.user
self.user_a
self.user_a.company_ids
self.company_a
product_batch
move_inres
move_in_res
moves_in_res
domain_move_in_todo
all_product_ids
moves_in_res
moves_in_res[0]
domain_move_in
self.env.context
moves_in
self.product_replenished
moves_out
quants
all_product_ids
move._get_subcontract_production
move._get_subcontract_production()
move._get_subcontract_production().mappped('product_qty')
move._get_subcontract_production().mapped('product_qty')
package_levels
package_levels.move_line_ids
pick.move_ids
pick.move_ids.quantity
pick.move_ids.state
outgoing_picking.move_ids
outgoing_picking.move_ids.move_orig_ids
outgoing_picking.move_ids.move_dest_ids
incoming_picking.move_ids
self.move_orig_ids
qty
self.move_orig_ids
self.move_orig_ids.mapped('quantity')
rental_order_1.picking_ids
move._get_subcontract_production()
self.ids
production_schedule_state
list(production_schedule_state.keys())
ins
ins.mapped('name')
unreconciled_outs
ins_per_product
lines
len(lines)
lines[0]
outs
outs.name
ins
ins.name
currents
reserved_outs_per_product
report_values
lines
docs
res['lines']
inter_wh_delivery.move_dest_ids
lines
moves_orig
outs
outs.name
outs.sale_line_id
move_orig
moves_orig
moves_orig.sale_line_id
out.move_orig_ids
outs
moves_orig
bom_qty
bom_data.get('producible_qty')
lead_time
bom_data['available_delay']
bom_data['availability_delay']
bom_data['lead_time']
bom_data['manufacturing_delay']
bom_data['manufacture_delay']
self
self.name
self
self.in_type_id
route_info
product_info
route_info
item
self.product_id
self.product_id.name
self.env.contex
self.env.context
self
self.name
self.env.context
production.consumption
self.env['stock.quant']._gather(self.product_to_use_1, self.stock_location
self.env['stock.quant']._gather(self.product_to_use_1, self.stock_location)
self.env['stock.quant']._gather(self.product_to_use_1, self.stock_location).reserved_quantity
backorder.product_qty
backorder.move_raw_ids.product_uom_qty
backorder.move_raw_ids[0].product_uom_qty
production.bom_id.bom_line_ids[0].product_qty
mo.product_qty
mo.product_id.tracking
mo.move_raw_ids
mo.move_raw_ids[0].product_uom_qty
mo.move_raw_ids[1].product_uom_qty
mo.move_raw_ids[0].product_id
self.product_1
self.product_2
productions
productions[2]
productions[2].move_raw_ids
productions[2].move_raw_ids[0].product_uom_qty
production.workorder_ids[0].workcenter_id
production.workorder_ids[0].workcenter_id.capacity_ids
production.workorder_ids[0].workcenter_id.default_capacity
account_move.mapped('name')
account_move.line_ids.mapped('name')
account_move.mapped('name')
account_move[0].move_line_ids
account_move[0].line_ids
account_move[1].line_ids
account_move[1].line_ids.mapped('name')
account_move[0].line_ids.mapped('name')
account_move[0].stock_valuation_layer_ids
account_move[1].stock_valuation_layer_ids
account_move[1].product_id
account_move[1].type
account_move[1].move_type
account_move[0].move_type
account_move[0].account_id
account_move[0].account_account_id
account_move.line_ids
p.mapped('name')
account_move.line_ids.mapped('name')
self.product_uom_qty
self.state
orderpoint.qty_to_order
rule
rule.name
rule.procure_method
move
move.location_id.name
move.location_dest_id.name
move.location_id.display_name
self.env.context
Return
print(Return)
svls_to_vacuum_by_product
all_candidates_by_product
self.env['product.product'].search([('name', '=', 'productserial1')])
picking_type_out_b.company_b
picking_type_out_b.warehouse_id.company_id
company_b
self.env.company
self.company_a
company_a
company_b
self.env.company
company_a
company_b
self.env.company
self.reservation_state
production.reservation_state
vals
picking.name
pickings.name
pickings.package_level_ids
picking
pickings
pickings.name
pickings.package_level_ids
pickings.package_level_ids.name
pickings.package_level_ids.package_id.name
self.warehouse.delivery_steps
sale_order.picking_ids
sale_order.picking_ids[0].name
sale_order.picking_ids[1].name
sale_order.picking_ids[2].name
sale_order.picking_ids[3].name
picking.move_line_ids
picking.move_line_ids.mapped('qty_done')
pack_lines
pack_lines.result_package_id
pack_lines.result_package_id.name
pack_lines[0].result_package_id.name
pack_lines[1].result_package_id.name
self.env['stock.move'].search([('product_id', '=', self.product_01.id)])
self.env['stock.move'].search([('product_id', '=', self.product_01.id)])[0].location_id.name
self.env['stock.move'].search([('product_id', '=', self.product_01.id)])[1].location_id.name
self.env['stock.move'].search([('product_id', '=', self.product_01.id)])[2].location_id.name
self.env['stock.move'].search([('product_id', '=', self.product_01.id)])[2].location_dest_id.name
move.location_id.name
orderpoint
orderpoint.location_id
orderpoint.location_id.name
rule.location_src_id
rule.location_src_id.name
rule.location_dest_id.name
real_time_svls_to_vacuum
new_svl_vals
len(new_svl_vals_real_time
len(new_svl_vals_real_time)
real_time_svls_to_vacuum
[l.product_id for l in real_time_svls_to_vacuum]
[l['product_id'] for l in new_svl_vals_real_time]
[l.product_id for l in real_time_svls_to_vacuum]
[l['product_id'] for l in new_svl_vals_real_time]
mo.product_id
self.exist()
self.exists()
move_create_proc.production_id
self.product_id
moves.product_id
orderpoint.product_id
orderpoint.qty_to_order
self[1].product_qty
orderpoint.qty_to_order
orderpoint.qty_to_order_manual
self.env.context
mo2.product_qty
move_finished_2.mapped('product_uom_qty')
move_finished_2[0].production_id
move_finished_2[1].production_id
wizard.product_qty
production.product_qty
wizard.mo_id.product_qty
production._origin.product_id
production.product_id
self.product_1
production.state
in_move.move_line_ids
in_move.move_line_ids.quantity
picking.state
picking_reciept.state
self.lot1.stock_valuation_layer_ids.mapped('value')
self.lot1.stock_valuation_layer_ids
self.lot1.stock_valuation_layer_ids.mapped('value')
out_move.state
vacuum_svls
real_time_svls_to_vacuum
product_2.stock_valuation_layer_ids
product_2.stock_valuation_layer_ids.mapped('value')
vacuum_svl
svl_to_vacuum
vacuum_svl.account_move_id
so.order_line
so
so.order_line
input_aml.reconcile
input_aml.reconciled
input_aml.mapped('reconciled')
output_aml.mapped('reconciled')
valo_aml.mapped('reconciled')
real_time_svls_to_vacuum
real_time_svls_to_vacuum[0].product_id
real_time_svls_to_vacuum[1].product_id
real_time_svls_to_vacuum[2].product_id
vacuum_svls
vacuum_svls[0].product_id
vacuum_svls[1].product_id
vacuum_svls
real_time_svls_to_vacuum
reconciled_line_ids
account_move.line_ids
account_move.name
vacuum_pairs
vacuum_pairs_to_reconcile
input_aml.mapped('reconciled')
output_aml.mapped('reconciled')
inv
inv.line_ids
inv.line_ids.mapped('reconciled')
to_reconcile_account_move_lines
to_reconcile_account_move_lines.product_id\
to_reconcile_account_move_lines.product_id
to_reconcile_account_move_lines.product_id.name
vacuum_svl.product_id
svl_to_vacuum.product_id
account
cat2 = product_1.categ_id.copy()
cat2.property_stock_account_output_categ_id
product_1.categ_id.property_stock_account_output_categ_id
output1_aml.mapped('reconciled')
output2_aml.mapped('reconciled')
res_ids
valued_move_line
valued_move_line.lot_id
self.product1.valuation
procurement
procurement.route_ids
procurements.route_ids
procurements[0].route_ids
self.env.context
self
backorder_moves
backorder_moves.is_subcontract
self.is_subcontract
move
self
self.is_subcontract
picking
picking.name
picking.move_ids
picking.move_ids.mapped('state')
self.env.context
self
self.move_orig_ids
self.product_uom_qty
self.move_orig_ids.mapped('product_uom_qty')
self.move_orig_ids[0].reference
self.move_orig_ids
self.move_orig_ids.reference
new_move_vals
new_move_vals['product_uom_qty']
new_move_vals[0]['product_uom_qty']
self
sekf
self
self.product_uom_qty
self.move_orig_ids
self.reference
self.move_dest_ids
self.move_dest_ids.name
self.move_dest_ids.reference
self
self.move_dest_ids
aml.mapped('debit')
aml.mapped('lot_id')
[am.lot.id for am in aml]
[am.lot_id for am in aml]
products
products.tracking
products.mapped('tracking')
products.stock_quant_ids
products.stock_quant_ids.lot_id
self
lots
products.stock_quant_ids.mapped('quantity')
template.product_variant_
template.product_variant_ids
in_move.state
in_move.quantity
productA.qty_available
productA.type
self.state
self.product_uom_qty
out_move.move_line_ids
out_move.move_line_ids.mapped('quantity')
out_move.move_line_ids.mapped('lot_id')
out_move.move_line_ids.mapped('quantity')
self.move_id
self[0].move_id
self[1].move_id
self
self.move_id
self.reference
self.product_id
ml.move_id
outdated_
outdated_candidates
outdated_candidates.move_id
out_move.move_line_ids
self.env['stock.move.line'].search([('product_id', '=', 43)])
outdated_candidates.location_id.name
outdated_candidates.location_dest_id.name
outdated_candidates.quantity
m4.move_line_ids
self.lot_id
self.lot_id.name
datetime.now()
self.manufacturing_period_to_display
len(date_range)
rfq_lines_date_planned
len(rfq_lines_date_planned)
date_planned
self
self.product
self.product_id
product.route_ids
product.route_ids.name
product.product_tmpl_id.supplierinfo_ids
product.product_tmpl_id.seller_ids
self.env['purchase.order.line'].search([('product_id', '=', product.id)])
rfq_domain
rfq_lines_date_planned
common_domain
domains
vacuum_svls
vacuum_svls.product_id
real_time_svls_to_vacuum.product_id
real_time_svls_to_vacuum.product_id.categ_id
product_1.categ_id
product_2.categ_id
product_2.categ_id.property_stock_account_output_categ_id
product_1.categ_id.property_stock_account_output_categ_id
so.order_line
so.order_line.move_ids
so.order_line.move_ids[0].product_id
so.order_line.move_ids[1].product_id
so.order_line.move_ids[2].product_id
vacuum_svls
real_time_svls_to_vacuum
vacuum_svls
default_fields
reval.current_value_svl
reval.lot_id
reval.lot_id.value_svl
lot.name
len(vals
len(vals)
self.product1.stock_valuation_layer_ids
[p.lot_id.name for p in self.product1.stock_valuation_layer_ids]
move.move_line_ids
move.move_line_ids.mapped('lot_id.name')
self.lot1.stock_valuation_layer_ids
self.lot1.stock_valuation_layer_ids.value
svls_to_vacuum_by_product
self.stock_valuation_layer_ids
self.stock_valuation_layer_ids.stock_move_id
self.stock_valuation_layer_ids.stock_move_id.reference
purchase_order.warehouse_id
purchase_order.picking_id.location_id
purchase_order.picking_ids.location_id
purchase_order.picking_ids.location_id.display_name
purchase_order.picking_ids.location_dest_id.display_name
self.company_data['default_warehouse'].lot_stock_id.display_name
avco_product.value_svl
avco_product.quantity_svl
vals_list
out_move.state
self.env.context
batch.allowed_picking_ids
batch.allowed_picking_ids.mapped('name')
batch.picking_ids
batch.picking_ids.mapped('name')
self.mapped('name')
self.name
self.batch_id
picking
picking.batch_id
picking.batch_id.picking_ids
self.state
self.backorder_id
self.state
dom
model._fields
lot_by_product
lot_by_product[variant.id]
move_line.lot_id
old_lot
wave.picking_ids.move_ids
wave.picking_ids.move_ids.mapped('quantity')
wave.picking_ids[1].move_ids.quantity
mo.product_uom_qty
procurement.product_qty
vals
self_values
self._values
self
self.product_id
move_finished_values
move_finished
self.move_finished_ids
self.move_finished_ids.product
self.move_finished_ids.product_id
self.product_id
order.move_finished_ids
protected
fields
self._fields[fields[0]]
self._fields['move_byproduct_ids']
self._fields['move_byproduct_ids'].store
self._fields['move_byproduct_ids'].inverse
self.move_finished_ids
mo.move_finished_ids
moves_finished_values
self.env['stock.location'].browse(15)
self.env['stock.location'].browse(15).namee
self.env['stock.location'].browse(15).name
self.env['stock.location'].browse(15).scrapped
self.env['stock.location'].browse(15).scrap
self.env['stock.location'].browse(15).is_scrap
self.env['stock.location'].browse(15).scrap_location
vals
res
res.move_finished_id
res.move_finished_id.state
vals
len(vals_list)
moves
list_move_bp
backorder_vals
picking.state
mo_backorder.qty_producing
co_prod_move_lines
co_prod_move_lines.lot_od
co_prod_move_lines.lot_id
mo.lot_producing_id
action['context']
backorder_mo.lot_producing_id
order.move_finished_id.move_line_ids
order.move_finished_id
order.move_finished_id.move_line_ids
order.move_finished_id._action_confirm()
order.move_finished_id.move_line_ids
move_to_finish
moves_to_finish
moves_to_finish.product_id
self
self.move_finished_id
self.move_finished_ids
self.move_finished_ids.product_id
mo.state
mo_1.move_raw_ids
mo_1.move_raw_ids.operation_id
mo_1.move_raw_ids.workorder_id
workorders_values
operation_by_id
operations_by_id
production.move_raw_ids.workorder_id
production.move_raw_ids.operation_id
self.workorder_ids
self.workorder_ids.operation_id
bom_line.operation_id
move_raw.operation_id
move_raw.workorder_id
bom_line.operation_id
move_raw.operation_id
move_raw.workorder_id
move_raw.operation_id
mo_1.workorder_ids
mo_1.move_raw_ids.workorder_id
workorder_values
workorders_values
self.move_raw_ids
move_raw.operation_id
move_raw.workorder_id
move_raw.operation_id
raw_moves_values
self.move_raw_ids.operation_id
self.move_raw_ids.workorder_id
byproduct_values
moves_to_unlink
workorders_to_unlink
self.move_raw_ids.workorder_id
mnf_product_a.move_finished_id
mnf_product_a.move_finished_ids
[(x.product_id, x.quantity, x.product_uom_qty) for x in mnf_product_a.move_finished_ids)]
[(x.product_id, x.quantity, x.product_uom_qty) for x in mnf_product_a.move_finished_ids]
self.bom_byproduct
self.bom_byproduct.byproduct_ids.product_qty
mnf_product_a.qty_producing
lot_by_product
svl_vals_list
product.mapped('name')
products.mapped('name')
lot_by_product
dimensions
volume
self.name
to_unit.name
convert_volume_uom
dimensions
product.barcode
self.name
self.description_ecommerce
revaluation_svl_vals
vals
self.production_id
self.production_id.finished_move_line_ids
self.production_id.finished_move_line_ids.mapped('quantity')
production.finished_move_line_ids
production_id.finished_move_line_ids.mapped('quantity')
production.finished_move_line_ids.mapped('quantity')
lines
lines[0]['quantity']
lines[1]['quantity']
lines[1]['document_out']
lines[2]['document_out']
lines[0]['document_out']
lines[1]['document_out']
so_1.warehouse_id
so_1.warehouse_id.delivery_steps
product_ids
product_ids.mapped('barcode')
product_ids
product_ids.mapped('name')
self._context
product_ids.product_tmpl_id.mapped('barcode')
old_move_line.quantity
failure_location_id
self.failure_
self.failure_location_id
forecast_lines
currents
outs.location_id
qc.test_type_id.name
qc.product_id
out_svl_vals_list
in_stock_valuation_layers
in_svl_vals_list
value.name
self.company_id
self.company_id.intercompany_receipt_type_id
records.pool
records.pool.fields_inverses
records.pool.field_inverses
determine_inverses
inverse_fields
fields
fieds
fied
field
rental_moves.mapped(product_qty')
rental_moves.mapped('product_qty')
lc.cost_lines
lc.cost_lines.split_method
lc.valuation_adjustment_lines.cost_line_id.name
lc.valuation_adjustment_lines.cost_line_id.split_methodl
lc.valuation_adjustment_lines.cost_line_id.split_method
lc.valuation_adjustment_lines
lc.cost_lines
lc.cost_lines.price_unit
lc.valuation_adjustment_lines
lc.valuation_adjustment_lines.move_id
lc.valuation_adjustment_lines.mapped('quantity')
lc.valuation_adjustment_lines.mapped('value')
lc.valuation_adjustment_lines.mapped('former_cost')
lc.valuation_adjustment_lines.mapped('additionnal_landed_costs')
lc.valuation_adjustment_lines.mapped('additionnal_landed_cost')
lc.valuation_adjustment_lines.mapped('additional_landed_cost')
lc.valuation_adjustment_lines.mapped('final_cost')
old_layers
old_layers.mapped('remaining_value')
self.product1.lot_valuated
self.backorder_confirmation_line_ids
self.backorder_confirmation_line_ids.picking_id
move.stock_valuation_layer_ids.mapped('value')
move.stock_valuation_layer_ids.mapped('quantity')
self.product1.qty_svl
self.product1.quantity_svl
self.product1.value_svl
l = self.product1.stock_valuation_layer_ids
[(l.quantity, l.lot_id.name, l.value)
ls = self.product1.stock_valuation_layer_ids
[(l.quantity, l.lot_id.name, l.value) for l in ls]
move.lot_ids.name
lot
lot.name
lot.standard_price
move.product_id.lot_valuated
move.move_line_ids
move.move_line_ids.lot_id
self.picking_id.group
self.picking_id.group_od
self.picking_id.group_id
new_picking.group_id
self.picking_id.group_id
self._prepare_picking_default_values()
relocate_wizard.dest_package_id_domain
relocate_wizard.dest_package_id.search(literal_eval(relocate_wizard.dest_package_id_domain))
return_picking.location_id.name
return_picking.location_dest_id.name
return_picking.state
receipt.state
receipt.move_ids.move_dest_ids
return_picking.move_ids
return_picking.action_assign()
return_picking.state
return_picking.move_ids.product_uom_qty
return_picking.move_id.location_id.state
return_picking.move_id.location_id.name
return_picking.move_ids.location_id.name
return_picking.move_ids.location_dest_id.name
return_picking.location_dest_id.name
return_picking.location_id.name
return_picking.move_ids.location_dest_id
return_picking.move_ids.location_dest_id.name
line._get_po_line_moves()
line._get_po_line_moves().location_id.name
line._get_po_line_moves().mapped('location_id.name')
line._get_po_line_moves().mapped('location_dest_id.name')
return_picking.location_dest_id
return_picking.location_id
warehouse.reception_steps
warehouse.route_ids
warehouse.route_ids.mapped('name')
warehouse.route_ids[0].rule_ids[0]
warehouse.route_ids[0].rule_ids[0].procure_method
warehouse.route_ids[0].rule_ids[0].action
so_2.users
so_2.env.users
so_2.env.user
so_2.env.user.name
po.env.users
po.env.user
po.env.user.name
so_2.action_confirm()
delivery_order.move_ids
delivery_order.move_ids.mapped('product_uom_qty')
delivery_order.move_ids.mapped('quantity')
self.productB.qty_available
return_picking.location_dest_id.name
warehouse.reception_route_id.rule_ids[0]
warehouse.reception_route_id.rule_ids[0].location_dest_id.name
warehouse.reception_route_id.rule_ids[1].location_dest_id.name
warehouse.reception_route_id.rule_ids[2].location_dest_id.name
stock_valuation_layers
stock_valuation_layers.value
wizard.product_return_moves
wizard.product_return_moves.mapped('quantity')
return_picking.move_ids
wizard.product_return_moves
wizard.product_return_moves[0].move_ids
wizard.product_return_moves[0].move_id
wizard.product_return_moves[1].move_id
self.state
type(self._prefetch_ids)
type(self.bom_line_ids._prefetch_ids)
p5.qty_available
p5.virtual_available
dirty_cell
dirty_cells
grid
self.env['purchase.order.line'].search([('product_id', 'in', self.matrix_template.product_variant_ids.ids)])
self.env['purchase.order.line'].search([('product_id', 'in', self.matrix_template.product_variant_ids.ids)]).order_id
a = self.env['purchase.order.line'].search([('product_id', 'in', self.matrix_template.product_variant_ids.ids)]).order_id
a
a.order_lines
a.orders_line
a.order_line
a.order_line.mapped('name')
len(a.order_line)
self.move_raw_ids
self.move_raw_ids.mapped('state')
vals
stock_moves
stock_moves.mapped('product_uom_qty')
qty_invoiced
qty_to_invoice
move.product_id._compute_average_price(qty_invoiced * move.product_qty, qty_to_invoice * move.product_qty, move, is_returned=is_return      ed)
move.product_id._compute_average_price(qty_invoiced * move.product_qty, qty_to_invoice * move.product_qty, move, is_returned=is_returned)
self
self.env.users
self.env.user
self.env.user.name
self.su
self.env.su